#!/bin/bash

if [ -e $(dirname "$0")/config.$HOSTNAME ]; then
	source $(dirname "$0")/config.$HOSTNAME
else
	source $(dirname "$0")/config
fi

if [ ${1:0:1} == '/' ]; then
	dir=$(dirname "$1")
	file=$(basename "$1")
else
	mf=$PWD/$1
	dir=$(dirname "$mf")
	file=$(basename "$mf")
fi

export SRC=$DATA/$dir/$file
export ORIG_SRC=$DATA/$dir/$file
export DEST=$dir/$file
export CLASSES=''

[ -e $DATA/classes.$HOSTNAME ] && export CLASSES=$(cat $DATA/classes.$HOSTNAME)

function find_class_file {
	for i in $HOSTNAME $CLASSES DEFAULT; do
		if [ -e $ORIG_SRC/$i ]; then
		   echo $ORIG_SRC/$i
		   return
	   fi
   done
}

function find_executable_class_file {
	for i in $HOSTNAME $CLASSES DEFAULT; do
		if [ -x $ORIG_SRC/$1.$i ]; then
		   echo $ORIG_SRC/$1.$i
		   return
	   fi
   done
}

if [ ! -d "$SRC" ]; then
	echo $DEST is not under mvofs control
	exit 1
fi

if [ -e $DEST -a ! -f $DEST ]; then
	echo $DEST is a directory!
	exit 1
fi

export SRC=$(find_class_file)
export PRE=$(find_executable_class_file pre)
export INSTEAD=$(find_executable_class_file instead)
export POST=$(find_executable_class_file post)

if [ -z "$SRC" -a -z "$INSTEAD" ]; then
	echo $DEST does not exist for these classes
	exit 1
fi

if [ -n "$INSTEAD" ]; then
	export SRC=$(mktemp)
	$INSTEAD > $SRC
fi

if [ -e $DEST ] && diff $SRC $DEST > /dev/null; then
	echo $DEST already there and new.
	exit 0
fi

if [ -e $DEST ]; then
	cp -v $DEST $(dirname $SRC)/$HOSTNAME.$(date +%Y%m%d%H%M)
fi

[ -n "$PRE" ] && $PRE

cp -v $SRC $DEST

[ -n "$POST" ] && $POST
