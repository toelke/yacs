#!/bin/bash -eu

source "$(dirname "$0")"/functions.sh
source "$(dirname "$0")"/constants.sh

load_config

FORCE=0

while [[ $# -gt 1 ]]; do
	if [[ "$1" == "--default" || "$1" == "-d" ]]; then
		shift
		TARGET_CLASS=DEFAULT
		log D using TARGET_CLASS=$TARGET_CLASS
	elif [[ "$1" == "--class" || "$1" == "-c" ]]; then
		shift
		TARGET_CLASS=$1
		shift
		log D using TARGET_CLASS=$TARGET_CLASS
	elif [[ "$1" == "--force" || "$1" == "-f" ]]; then
		shift
		FORCE=1
	fi
done

if [ ! -f "$1" ]; then
	log E $1 is no file!
	exit 1
fi

if [ -L "$1" ]; then
	log E $1 is a symlink
	exit 1
fi

# yacsify FILE
get_dir_and_file $1
log D will handle file $file from directory $dir

resolve_home_dir

targetfilename=${TARGET_CLASS=$HOSTNAME}
target=$DATA/$tdir/$file/$targetfilename
log D will move to $target and symlink

if [[ -e $target && ! $FORCE -eq 1 ]]; then
	log E $target already exists, doing nothing, use --force
	exit 1
fi

$MKDIR -p $DATA/$tdir/$file

$MV -v $1 $target
$LN -svf $target $1

cd $DATA

if [ -d .git ]; then
	git add ./$tdir/$file/$HOSTNAME
	git add ./$tdir/$file/file-mode

	git commit -a -m "Autocommit: yacsified $dir/$file;"
else
	log I not using git
fi
