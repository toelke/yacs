#!/bin/bash -eu

# EWID
LOGLEVEL=${LOGLEVEL=W}

log() {
	ll=$1
	if [ $LOGLEVEL == I ]; then
		if [[ "D" == *$ll* ]]; then
			return
		fi
	elif [ $LOGLEVEL == W ]; then
		if [[ "DI" == *$ll* ]]; then
			return
		fi
	elif [ $LOGLEVEL == E ]; then
		if [[ "DIW" == *$ll* ]]; then
			return
		fi
	fi
	echo $@
}

FORCE=0

while [[ $# -gt 1 ]]; do
	if [[ "$1" == "--default" || "$1" == "-d" ]]; then
		shift
		TARGET_CLASS=DEFAULT
		log D using TARGET_CLASS=$TARGET_CLASS
	elif [[ "$1" == "--class" || "$1" == "-c" ]]; then
		shift
		TARGET_CLASS=$1
		shift
		log D using TARGET_CLASS=$TARGET_CLASS
	elif [[ "$1" == "--force" || "$1" == "-f" ]]; then
		shift
		FORCE=1
	fi
done

if [ -e $(dirname "$0")/config.$HOSTNAME ]; then
	log I loading config $(dirname "$0")/config.$HOSTNAME
	source $(dirname "$0")/config.$HOSTNAME
else
	log I loading config $(dirname "$0")/config
	source $(dirname "$0")/config
fi

CP=${CP=cp}
STAT=${STAT=stat}
MKDIR=${MKDIR=mkdir}

if [ ! -f "$1" ]; then
	log E $1 is no file!
	exit 1
fi

if [ ${1:0:1} == '/' ]; then
	dir=$(dirname "$1")
	file=$(basename "$1")
else
	mf=$PWD/$1
	dir=$(dirname "$mf")
	file=$(basename "$mf")
fi

log D will handle file $file from directory $dir

$MKDIR -p $DATA/$dir/$file

targetfilename=${TARGET_CLASS=$HOSTNAME}
target=$DATA/$dir/$file/$targetfilename
log D will copy to $target

if [[ -e $target && ! $FORCE -eq 1 ]]; then
	log E $target already exists, doing nothing, use --force
	exit 1
fi

$CP -v $1 $target
chmod 644 $target

$STAT -c "%U:%G %a" $1 > $DATA/$dir/$file/file-mode

cd $DATA

if [ -d .git ]; then
	git add ./$dir/$file/$HOSTNAME
	git add ./$dir/$file/file-mode

	git commit -a -m "Autocommit: yacsified $dir/$file;"
else
	log I not using git
fi
