#!/bin/bash -eu

source "$(dirname "$0")"/functions.sh
source "$(dirname "$0")"/constants.sh

load_config

get_dir_and_file $1
log D will try to create file $file in directory $dir

resolve_home_dir

export SRC=$DATA/$tdir/$file
# SRC will be changed if a class-file is used
export ORIG_SRC=$SRC
export DEST=$dir/$file
export CLASSES=''

[ -e $DATA/classes.$HOSTNAME ] && export CLASSES=$(cat $DATA/classes.$HOSTNAME)

function find_class_file {
	for i in $HOSTNAME $CLASSES DEFAULT; do
		if [ -e $ORIG_SRC/$i ]; then
		   echo $ORIG_SRC/$i
		   return
	   fi
   done
}

function find_executable_class_file {
	for i in $HOSTNAME $CLASSES DEFAULT; do
		if [ -x $ORIG_SRC/$1.$i ]; then
		   echo $ORIG_SRC/$1.$i
		   return
	   fi
   done
}

if [ ! -d "$SRC" ]; then
	log E $DEST is not under yacss control
	exit 1
fi

if [ -e $DEST -a ! -f $DEST ]; then
	log E $DEST is a directory!
	exit 1
fi

export SRC=$(find_class_file)
export PRE=$(find_executable_class_file pre)
export INSTEAD=$(find_executable_class_file instead)
export POST=$(find_executable_class_file post)

if [ -z "$SRC" -a -z "$INSTEAD" ]; then
	log E $DEST does not exist for these classes
	exit 1
fi

if [ -n "$INSTEAD" ]; then
	export SRC=$($MKTEMP)
	$INSTEAD > $SRC
fi

if [ -e $DEST ] && diff $SRC $DEST > /dev/null; then
	log I $DEST already there and new.
else
	if [ -e $DEST ]; then
		$CP -v $DEST $ORIG_SRC/$HOSTNAME.$(date +%Y%m%d%H%M)
	fi

	[ -n "$PRE" ] && $PRE

	$CP -v $SRC $DEST

	[ -n "$POST" ] && $POST
fi
